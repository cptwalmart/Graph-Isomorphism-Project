Github Link https://github.com/cptwalmart/Graph-Isomorphism-Project

A Comparative Study of Graph Isomorphism Applications [Somkunwar, Vaze]
https://pdfs.semanticscholar.org/12e3/d2640d2a5255666a91d3fb1be20ccebdec69.pdf

Graph Isomorphism in Quasipolynomial Time [Babai]
https://arxiv.org/pdf/1512.03547.pdf

McKayâ€™s Canonical Graph Labeling Algorithm [Hartke Radcliffe]
http://www.math.unl.edu/~aradcliffe1/Papers/Canonical.pdf

Most heuristic evidence points to the problem not being NP-Complete. There is further evidence that the problem of graph isomorphism is not NP complete, in that if it were the polynomial hierarchy would collapse.

GI is polynomial time for graphs of bounded degree, graphs of bounded genus, graphs of bounded eigenvalue multiplicity, and bounded treewidth. The problem of counting the number of isomorphisms between two graphs is Turing reducible to the graph inversion itself.

According to this paper it is known ot have time complexity at most exp(O(n^(2/3))) for graphs with n verticies.

There are general algorithms for GI which are "practical in practice." AKA they have a few worst case inputs that cause jaw dropping run times, but are fine for most input.

Graph Isomorphism in Quasipolynomial time
https://arxiv.org/pdf/1512.03547.pdf

Graph Theory and Computing
https://ebookcentral.proquest.com/lib/salisbury/reader.action?docID=1901678

Finite automata, mathematical models of discrete time finite state system, can be represented by a finite sequence of directed graphs called transition graphs. Such graphs are studied from an algebraic point of view in terms of a natural representation of the graphs by linear transformations. Under this, the classical inveriants of linear transformation similarly become invariants of graphical isomorphism. This book goes to investigate to determine the extent which these invariants specify the structure (isomorphism class) of an arbitrary transition graph. [pg 123-124]

Practical graph isomorphism, II
https://www-sciencedirect-com.proxy-su.researchport.umd.edu/science/article/pii/S0747717113001193

Graph isomorphism, general remarks
https://www-sciencedirect-com.proxy-su.researchport.umd.edu/science/article/pii/0022000079900436

The Graph Isomorphism Problem and approximate categories
https://www-sciencedirect-com.proxy-su.researchport.umd.edu/science/article/pii/S074771711300093X

An Algorithm for Subgraph Isomorphism
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.361.7741&rep=rep1&type=pdf

Ruducibility among combinatorial problems [Karp]
http://cgi.di.uoa.gr/~sgk/teaching/grad/handouts/karp.pdf

The graph isomorphism disease [Read Cornell]
https://onlinelibrary.wiley.com/doi/pdf/10.1002/jgt.3190010410

Graph Isomorphism
* If two graphs are look the same, but the number of verticies and edges are not the same, then it is not isomorphic.
* If there is one to one maping function between the verticies then it called isomorphic.
* If all properties of graph isomorphism are satisfied then two graphs are said to be isomorphic, else they are not.

Properties of Graph Isormorphism:
1) Number of verticies should be equal for each graph
2) Number of edges should be equal for each graph
3) In Degree and Out Degree should be equal
4) Number of connected components should be the same
5) Number of loops should be the same
6) Number of parallel edges should be the same

Examples of practical applications of graph isomorphism
chemical structures
social networks
CAD
Image Processing
Protein structures
Biometrics

Chemist's Problem
Efficent graph isomorphism algorithms are useful to Chemistry since molecules can be viewed as a graph where the verticies are the atoms and edges are the bonds. A problem which arises is classifiying molecules; namely, we have a very large table of molecules and we are given some new molecule and asked whether or not it is in the list. Since the number of molecules is potentially exponential in the number of atoms per molecule, even a linear time isomorphism algorighm naively produces a potentally exponential search.

A function f from a class of objects A to the natural numbers is called a certificate with respect to some equivalence  relation ~= if for all G, G' in A, G ~= G' iff f(g) ~= f(G'). In the case that A is a set of incidence matricies and ~= is an isomorphism, then a computable f exists since we can simply enumerate all graphs and assign a number to each graph according to when it first appeared. So the interesting question to ask of a certificat is its computation complexity. We shall say that f is a deterministic certificate if f is a certificate and it is computable in polynomial time.

If graph isomorphism has deterministic certificates, then graph isomorphism is in P. Thus deterministic certificates seems too strong a condition to prove existance for at the present time. If f is a certificate which is computable in nondeterministic polynomail time, then f is called a succinct certificate. [Graph Isomorphism General Remarks 137]

Real world applications of Isomorphic algorithms are actually quite fast and specialized

Subgraph isomorphism is known to be NP-Complete
(Will probably add as another algorithm)

A partition method was proposed that sorted sequences of length-l path numbers, and divided cells of partition into 3 categories: not simliar, completely similar, simliar but not completely.
https://www-sciencedirect-com.proxy-su.researchport.umd.edu/science/article/pii/S1875389212007249


Terminology
Parallel edges- two or more edges that are incident to the same two verticies.
In and Out Degree - For a vertex, the number of head ends adjacent to a vertex is called the indegree of the vertex and the number of tail ends adjacent to a vertex is its outdegree. (How many nodes point to it, and how many point out)

An Efficient Algorithm for Graph Isomorphism 
https://www2.seas.gwu.edu/~simhaweb/iisc/Corneil.pdf